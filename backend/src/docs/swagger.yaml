openapi: 3.1.0
info:
  title: API task_management_system backend service
  version: "1.0"
servers:
  - url: /api/user
  - url: /api/task
paths:
  /get_all:
    get:
      tags:
        - Task
      description: Get all task
      # security:
      #   - bearerAuth: []
      summary: Get all task
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
              message: Get All Task Success
              data:
                - task_id: task-nbAU
                  name: ซื้อของเข้าบ้าน
                  details: "ไปซูเปอร์มาร์เก็ตเพื่อซื้อของจำเป็น"
                  status: "ทำอยู่"
  /add_task:
    post:
      tags:
        - Task
      summary: Add task
      requestBody:
        required: true
        description: Add task payload
        content:
          application/json:
            example:
              name: อ่านหนังสือ
              details: อ่านหนังสือเรื่องการพัฒนาตนเอง 30 นาที
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "created successfully"
  /update_user:
    put:
      tags:
        - user
      description: Update user
      summary: Update user
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          value: CWEDS
          required: true
          description: user_id for update
      requestBody:
        required: true
        content:
          application/json:
            examples:
              example_1:
                value:
                  username: tset12
                  email: "12"
              example_2:
                value:
                  username: tset13
                  email: "12"

      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: updated successfully

  /delete_user/{user_id}:
    delete:
      tags:
        - user
      description: Delete user
      summary: Delete user
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          value: CWEDS
          required: true
          description: The sales code name.
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: deleted successfully
  /add_user:
    post:
      tags:
        - user
      description: Add user
      summary: Add user
      requestBody:
        required: true
        description: Add user
        content:
          application/json:
            example:
              username: tset12
              email: "12"
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "created successfully"

  /check_ip:
    get:
      tags:
        - ip
      servers:
        - url: /api/ip
      description: Get ip
      # security:
      #   - bearerAuth: []
      summary: Get ip
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: success
                data: 39.228.50.232

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Authorization header using the Bearer scheme.
      in: header
      name: Authorization

tags:
  - name: User
    description: User All endpoint
  - name: Task
    description: Task All endpoint
